---
title: "Solution: lesson name goes here"
author: "Author name goes here"
date: "1999-12-31"
format: html
---

## Demo

### Using containers

#### apptainer shell

```bash
apptainer shell /project/shared/resources/containers/ubuntu-22/ubuntu-22.sif
```

#### apptainer exec

```bash
apptainer exec /project/shared/resources/containers/ubuntu-22/ubuntu-22.sif bash
```

### Support for Docker Images

Before you run the following command...

```bash
apptainer exec docker://ubuntu:22.04 bash
```

... add this line to your `~/.bash_aliases`!

```bash
export APPTAINER_CACHEDIR=/project/$USER/apptainer_cache
```

### Mounting (or Binding)

### Single directory

```bash
apptainer exec -B /project/shared/resources /project/shared/resources/containers/ubuntu-22/ubuntu-22.sif bash 
```

### Multiple directories

```bash
apptainer exec \
  -B /project/shared/resources \
  -B /project/$USER \
  /project/shared/resources/containers/ubuntu-22/ubuntu-22.sif \
  bash 
```

## Exercise

In the container: `r-4.3.0.sif`

Execute the command:

```bash
R --version
```

### Hints

- Use the `apptainer exec` command.

### Solution

```bash
apptainer exec \
  /project/shared/resources/containers/r-4.3.0/r-4.3.0.sif \
  R --version 
```

## Exercise

In the container: `r-4.3.0.sif`

Execute the R script: `installed_packages.R`

### Hints

- Use the Bash command `Rscript`
- The full command should look like `Rscript /path/to/installed_packages.R`.
- The directory that contains the R script must be bound to the container,
  to be visible from inside the container.

### Solution

```bash
apptainer exec \
  -B /project/shared/resources \
  /project/shared/resources/containers/r-4.3.0/r-4.3.0.sif \
  Rscript /project/shared/resources/containers/scripts/installed_packages.R
```

## Exercise

In the Docker container accessible online:

```
bioconductor/bioconductor_docker:devel
```

Execute the R script: `installed_packages.R`

### Hints

- Before you run the `apptainer exec` command,
  make sure that the environment variable `APPTAINER_CACHEDIR` is set in your Bash session.
- The first time you run an `apptainer exec` command on a new remote container,
  the command will likely take a minute or two to download the container files.
  If you see messages like "Copying blob" and "info unpack layer",
  you are on the right track, keep waiting!

### Solution

```bash
# Check whether the environment variable is set
echo $APPTAINER_CACHEDIR
# Run the script
apptainer exec \
  -B /project/shared/resources \
  docker://bioconductor/bioconductor_docker:devel \
  Rscript /project/shared/resources/containers/scripts/installed_packages.R
```

Visually compare the output (R version, list of packages) with the previous exercise.

> Answer:
> 
> 128 packages installed in this container instead of 34 in the local one.
> (25th November 2024)

## Exercise

In the container: `fastqc.sif`

Run the FastQC program on the input file `ERR1755082_1.fastq.gz`,
and direct the output to your own project directory.

### Hints

- In the container, the `fastqc` command is already on the PATH.
- The input file `ERR1755082_1.fastq.gz` is stored in the shared resources, next to the container file.
- For tidiness, manually create a subdirectory in your project directory,
  and pass the path to this directory to the `fastqc` command.
- The full command should look like `fastqc -o /path/to/output /path/to/input`.
- Remember to bind input and output directories to the container.

### Solution

```bash
# Create output directory
mkdir -p /project/$USER/containers/fastqc
# Run FASTQC
apptainer exec \
  -B /project/shared/resources \
  -B /project/$USER \
  /project/shared/resources/containers/fastqc/fastqc.sif \
  fastqc \
    -o /project/$USER/containers/fastqc \
    /project/shared/resources/containers/fastqc/ERR1755082_1.fastq.gz
```
