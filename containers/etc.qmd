# What are containers?

## What are containers?

- Consistent, reproducible environments.
- Bundles of code, libraries, and dependencies.
- Secure environments separated from data on the host system.

```{r}
#| fig-cap: "Illustration of a container isolating software on a host (Source: Kevin Rue)."
##| out-height: 300px
knitr::include_graphics("img/containers-draft-02-slide-04.svg")
```

## Multiple containers isolate software on a single host

```{r}
#| fig-cap: "Illustration of multiple containers on a single host (Source: Kevin Rue)."
knitr::include_graphics("img/containers-draft-02-slide-05.svg")
```

## Reproducible Research

### Containers

- Contain all code dependencies including operating system dependencies.
- Can reproduce the exact same environment on different host operating systems.

### For comparison

- [Conda](https://anaconda.org/anaconda/conda) only reproduces installed software
  but has different sets of dependencies for different operating systems.

# Using Containers

## Containers Engines

### Docker

- One of the first and most famous.
- Caveat: requires administrator permissions to run.

### Singularity

- Gained popularity over Docker thanks to the absence of administrator requirement.

### Apptainer

- A fork of Singularity.
  Chosen for JADE cluster and OBDS server.

## Containers: Images and Definition Files

### Image Files

Container images use the `*.sif` file extension.

- Those are the files that contain the actual data.

### Definition Files

Container definitions use the `*.def` extension.

- Those are scripts that describe the container and were used to create the corresponding image files.

::: {.callout-note}
In this lesson, we will initially use existing images to run commands before writing our own definitions and creating our own images.
:::

## Containers on JADE

The IT team of the JADE cluster prepared a small set of containers that can help you get started.

They can be found in the directory `/package/containers/`.

```
/package/containers/
│
├── centos          # CentOS container, mimics previous cluster
├── ubuntu          # Basic Ubuntu container, mimics JADE
├── R-4.3.0         # Ubuntu + R 4.3.0
├── rstudio-server  # R 4.3.0 + RStudio Server
├── miniforge       # Ubuntu + Miniforge
└── builder         # Ubuntu + compilers & libraries
```

## Using Containers

Given a container file, Apptainer commands can execute commands in the container in various ways.

For instance, the following commands both launch a Bash shell within the given container.

### shell

The `shell` sub-command specifically opens an interactive shell in the given container:

```bash
apptainer shell /package/containers/ubuntu/ubuntu-22.sif
```

### exec

The `exec` sub-command execute any given command in the given container:

```bash
apptainer exec /package/containers/ubuntu/ubuntu-22.sif bash
```

::: {.callout-note}
In practice, both can provide a Bash shell, but `shell` is explicitly intended for interactive use, while `exec` is more suited for single-command execution
:::

## Support for Docker Images

Apptainer can also run Docker images from online repositories.

```bash
apptainer exec docker://ubuntu:22.04 bash
```

Apptainer caches downloaded containers to the user’s home directory.

To avoid quota issues, change the cache location in your `.bash_aliases`.

```bash
export APPTAINER_CACHEDIR=/project/example/myname/mycontainers
```

## Accessing Data on the Host System

Containers mainly provide software.

Containers must be given controlled access to the host system for:

- Accessing input data files
- Storing output data files

Access to specific directories is given by 'mounting' (also known as 'binding') the relevant directories on the host system to specific paths accessible from within the container.

## Mounting (or Binding)

```bash
apptainer exec -B /project/sysadmin /package/containers/ubuntu/ubuntu-22.sif bash 
```

- The `-B` option 'binds' a directory to the container.
- By default, containers can read and write to bounds directories,
  unless ‘read-only’ is specified^[<https://apptainer.org/docs/user/main/bind_paths_and_mounts.html>].
- Multiple directories can be bound to the same container, repeating the `-B` option as many times as necessary.

```bash
apptainer exec \
  -B /project/sysadmin \
  -B /package/python-cbrg \
  /package/containers/ubuntu/ubuntu-22.sif bash 
```

## References

```{r}
#| results: asis
PrintBibliography(bib)
```
