## Cluster analysis

Task of grouping a set of objects in such a way that objects in the same group are more similar to each other than to those in other groups.

:::: {.columns}

::: {.column width="50%"}
```{r}
#| fig-align: center
#| fig-height: 6
ggplot(iris, aes(Sepal.Length, Sepal.Width)) +
  geom_point(size = 3) +
  cowplot::theme_cowplot() +
  labs(x = "variable 1", y = "variable 2")
```
:::

::: {.column width="50%"}
```{r}
#| fig-align: center
#| fig-height: 6
iris %>% 
  mutate(
    Cluster = Species %>% 
      fct_recode(
        "1" = "setosa",
        "2" = "versicolor",
        "3" = "virginica"
      )
  ) %>% 
  ggplot(aes(Sepal.Length, Sepal.Width, color = Cluster)) +
  geom_point(size = 3) +
  cowplot::theme_cowplot() +
  labs(x = "variable 1", y = "variable 2")
```
:::

::::

- Unsupervised machine learning task.
- Many methods (e.g.,$k$-means clustering, hierarchical clustering).
- Insights arise from downstream analyses of the resulting clusters.
- Often an iterative process as a result of initial over- or under-clustering.

## $k$-means clustering

:::: {.columns}

::: {.column width="33%"}

<br/>

1. Initialise $k$ centroids randomly.
2. Assign each data points to the nearest centroid.
3. Compute new centroid coordinates.
4. Repeat (2) and (3) until convergence, or for a maximum number of iterations allowed.
:::

::: {.column width="66%"}
```{r}
#| fig-align: center
#| out-height: 400px
#| out-width: 600px
## Source: https://stanford.edu/~cpiech/cs221/handouts/kmeans.html
knitr::include_graphics("img/kmeans-steps.png")
```

:::

::::

:::: {.columns}

::: {.column width="50%"}
#### Pro(s)

- Easy to understand and implement.
- Extremely fast.
:::

::: {.column width="50%"}
#### Con(s)

- Must pre-select the number of groups.
- Stochastic (must set seed for reproducibility).
:::

::::
